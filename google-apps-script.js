/**
 * Google Apps Script –¥–ª—è –∑–∞–ø–∏—Å–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ—Å–µ—â–µ–Ω–∏–π –≤ Google Sheets
 * 
 * –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –î–õ–Ø –í–´–°–û–ö–ò–• –ù–ê–ì–†–£–ó–û–ö:
 * - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç LockService –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è race conditions
 * - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ 30 –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫
 * - –î–æ 100 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ (1-5 —Å–µ–∫)
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–µ—Ä–µ–¥—å –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ
 * 
 * –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï:
 * 
 * 1. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é Google –¢–∞–±–ª–∏—Ü—É
 * 2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Extensions > Apps Script
 * 3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä
 * 4. –ó–∞–º–µ–Ω–∏—Ç–µ SPREADSHEET_ID –Ω–∞ ID –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã (–∏–∑ URL)
 * 5. –ù–∞–∂–º–∏—Ç–µ Deploy > New deployment
 * 6. –í—ã–±–µ—Ä–∏—Ç–µ "Web app"
 * 7. Execute as: "Me"
 * 8. Who has access: "Anyone"
 * 9. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –¥–µ–ø–ª–æ—è
 * 10. –í—Å—Ç–∞–≤—å—Ç–µ URL –≤ src/utils/analytics.ts (–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è GOOGLE_APPS_SCRIPT_URL)
 */

// ID –≤–∞—à–µ–π Google –¢–∞–±–ª–∏—Ü—ã (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
const SPREADSHEET_ID = 'YOUR_SPREADSHEET_ID_HERE';
const SHEET_NAME = 'Analytics';

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç POST –∑–∞–ø—Ä–æ—Å—ã
 */
function doPost(e) {
  // –ü–æ–ª—É—á–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è race conditions
  const lock = LockService.getScriptLock();
  
  try {
    // –ñ–¥–µ–º –¥–æ 30 —Å–µ–∫—É–Ω–¥, –ø–æ–∫–∞ –Ω–µ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
    lock.waitLock(30000);
    
    const data = JSON.parse(e.postData.contents);
    const { userId, fullName, section, timestamp } = data;
    
    // –û–¢–õ–ê–î–ö–ê: –õ–æ–≥–∏—Ä—É–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏
    Logger.log('üìä Received data:');
    Logger.log('User ID: ' + userId);
    Logger.log('Full Name: ' + fullName);
    Logger.log('Section: ' + section);
    Logger.log('Timestamp: ' + timestamp);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    const spreadsheet = SpreadsheetApp.openById(SPREADSHEET_ID);
    let sheet = spreadsheet.getSheetByName(SHEET_NAME);
    
    // –ï—Å–ª–∏ –ª–∏—Å—Ç–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    if (!sheet) {
      sheet = spreadsheet.insertSheet(SHEET_NAME);
      sheet.getRange(1, 1, 1, 7).setValues([[
        'User ID',
        'Full Name',
        '–£–º–Ω—ã–π –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥',
        '–†–∞—Å—à–∏—Ñ—Ä–æ–≤—â–∏–∫ –∞–Ω–∞–ª–∏–∑–æ–≤',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø',
        '–ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏ –∫—Ä–∞—Å–æ—Ç—ã',
        '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ'
      ]]);
      sheet.getRange(1, 1, 1, 7).setFontWeight('bold');
    }
    
    // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º getDataRange() —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    const dataRange = sheet.getDataRange();
    const values = dataRange.getValues();
    let userRow = -1;
    
    // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for (let i = 1; i < values.length; i++) {
      if (values[i][0] == userId) {
        userRow = i + 1; // +1 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å—ã –≤ Sheets –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 1
        break;
      }
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É –ø–æ —Ä–∞–∑–¥–µ–ª—É (—Å —É—á–µ—Ç–æ–º –Ω–æ–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏ Full Name)
    const sectionColumns = {
      'bmi-calculator': 3,    // –£–º–Ω—ã–π –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥ (–ö–æ–ª–æ–Ω–∫–∞ C)
      'lab-analysis': 4,      // –†–∞—Å—à–∏—Ñ—Ä–æ–≤—â–∏–∫ –∞–Ω–∞–ª–∏–∑–æ–≤ (–ö–æ–ª–æ–Ω–∫–∞ D)
      'horoscope': 5,         // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø (–ö–æ–ª–æ–Ω–∫–∞ E)
      'affirmation': 6        // –ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏ –∫—Ä–∞—Å–æ—Ç—ã (–ö–æ–ª–æ–Ω–∫–∞ F)
    };
    
    const sectionColumn = sectionColumns[section];
    
    // –û–¢–õ–ê–î–ö–ê: –õ–æ–≥–∏—Ä—É–µ–º –º–∞–ø–ø–∏–Ω–≥
    Logger.log('Section "' + section + '" maps to column ' + sectionColumn);
    
    if (!sectionColumn) {
      Logger.log('‚ùå ERROR: Invalid section: ' + section);
      return ContentService.createTextOutput(JSON.stringify({
        success: false,
        error: 'Invalid section: ' + section
      })).setMimeType(ContentService.MimeType.JSON);
    }
    
    if (userRow === -1) {
      // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É
      // –ú–∞—Å—Å–∏–≤: [userId, fullName, bmi, lab, horoscope, affirmation, timestamp]
      // –ò–Ω–¥–µ–∫—Å—ã: [0,     1,        2,   3,   4,         5,           6]
      const newRow = [userId, fullName, 0, 0, 0, 0, timestamp];
      
      // –í–ê–ñ–ù–û: –í –º–∞—Å—Å–∏–≤–µ –∏–Ω–¥–µ–∫—Å—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0, –∞ –≤ Sheets –∫–æ–ª–æ–Ω–∫–∏ —Å 1
      // –ü–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –≤—ã—á–µ—Å—Ç—å 1 –∏–∑ –Ω–æ–º–µ—Ä–∞ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –º–∞—Å—Å–∏–≤–∞
      const arrayIndex = sectionColumn - 1;
      newRow[arrayIndex] = 1; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 1 –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
      
      Logger.log('‚úÖ New user: writing 1 to array index ' + arrayIndex + ' (column ' + sectionColumn + ')');
      sheet.appendRow(newRow);
    } else {
      // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –∏ –∏–º—è
      sheet.getRange(userRow, 2).setValue(fullName); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
      
      const currentCount = sheet.getRange(userRow, sectionColumn).getValue();
      Logger.log('‚úÖ Existing user row ' + userRow + ': updating column ' + sectionColumn + ' from ' + currentCount + ' to ' + (currentCount + 1));
      sheet.getRange(userRow, sectionColumn).setValue(currentCount + 1);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è
      sheet.getRange(userRow, 7).setValue(timestamp);
    }
    
    return ContentService.createTextOutput(JSON.stringify({
      success: true,
      message: 'Analytics tracked successfully'
    })).setMimeType(ContentService.MimeType.JSON);
    
  } catch (error) {
    return ContentService.createTextOutput(JSON.stringify({
      success: false,
      error: error.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  } finally {
    // –í—Å–µ–≥–¥–∞ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    lock.releaseLock();
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç GET –∑–∞–ø—Ä–æ—Å—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
 */
function doGet(e) {
  return ContentService.createTextOutput(JSON.stringify({
    status: 'OK',
    message: 'Beauty Panel Analytics API is running'
  })).setMimeType(ContentService.MimeType.JSON);
}

